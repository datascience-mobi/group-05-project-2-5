pValues <- apply(VorinostatTotal, 1, function(x) t.test(x[col_untreated],
x[col_treated],
paired = TRUE,
alternative = "two.sided")$p.value)
pValues=as.data.frame(pValues)
View(pValues)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(Fc_m)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(Fc_m
FC_m=rowMeans(FC)
FC_m=as.data.frame(Fc_m)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
View(FC_m)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,sortedpValues)
head(pV_FC)
pV_FC= cbind(FC_m,pValues)
head(pV_FC)
diff= setdiff(generalbiomarkergenes,biomarkers.genes)
# Franzi
#wd = ("C:/Users/franz/Documents/GitHub/project-02-group-05/Broad Analysis")
# Laura
wd = ("/Users/laura.plutowski/Desktop/Uni/4.Semester/projekt/project-02-group-05")
library(readr)
Untreated = readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated = readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
Metadata = read_tsv(paste0(wd,"/data/NCI_TPW_metadata.tsv"))
Drug_annotation = read.table(paste0(wd,"/data/drug_annotation.tsv"),
header = TRUE, sep ="\t", stringsAsFactors = TRUE)
Drug_annotation$Mechanism[grep(Drug_annotation$Drug, pattern= "vorinostat")]
Drug_annotation$target[grep(Drug_annotation$Drug, pattern= "vorinostat")]
Drug_annotation$indication[grep(Drug_annotation$Drug, pattern= "vorinostat")]
Metadata <- as.matrix(Metadata)
Metadatatissue <- Metadata[1:819,"tissue"]
Treatedwithtissue <- rbind(Treated, Metadatatissue)
TreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Treatedwithtissue))
TreatedVorinostattissue <- Treatedwithtissue[,TreatedVorinostatcolumns]
#Create a pie chart:
palette(rainbow(9))
pie(table(TreatedVorinostattissue["Metadatatissue",]),
main="Tissue types of Vorinostat-treated samples",
radius=1,
cex=0.8)
TreatedVorinostat <- Treated[,TreatedVorinostatcolumns]
UntreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Untreated))
UntreatedVorinostat <- Untreated[,UntreatedVorinostatcolumns]
par(mar=c(5, 4, 5, 9))
plot(density(UntreatedVorinostat), col="blue" ,xlab = "Gene expression",
main = "Effects of Vorinostat on overall gene expression")
lines(density(TreatedVorinostat), col = "red")
legend("topright", inset = c(-0.4,0), legend=c("Untreated", "Treated") , xpd = TRUE,
pch=19, col = c("blue", "red"))
UntreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Untreated))
TreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Treated))
UntreatedVorinostat <- Untreated[,UntreatedVorinostatcolumns]
TreatedVorinostat <- Treated[,TreatedVorinostatcolumns]
# normalize the data
UntreatedVorinostat <- apply(UntreatedVorinostat, 2, function(x){
(x - mean(x)) / sd(x)
})
TreatedVorinostat <- apply(TreatedVorinostat, 2, function(x){
(x - mean(x)) / sd(x)
})
FC <- TreatedVorinostat  - UntreatedVorinostat
identical(rownames(UntreatedVorinostat), rownames(TreatedVorinostat))
identical(colnames(UntreatedVorinostat), colnames(TreatedVorinostat))
Untreatedcolnames <- sub(pattern = "_0nM_24h", "", colnames(UntreatedVorinostat))
Treatedcolnames <- sub(pattern = "_5000nM_24h", "", colnames(TreatedVorinostat))
identical(Untreatedcolnames, Treatedcolnames)
VorinostatTotal <- cbind(UntreatedVorinostat, TreatedVorinostat)
col_untreated = grep ('_0nM',colnames(VorinostatTotal))
col_treated = grep ('_5000nM',colnames(VorinostatTotal))
t.test.Vorinostat = apply(VorinostatTotal, 1, function(x) t.test(x[col_untreated],
x[col_treated],
paired = TRUE,
alternative = "two.sided"))
pValues <- apply(VorinostatTotal, 1, function(x) t.test(x[col_untreated],
x[col_treated],
paired = TRUE,
alternative = "two.sided")$p.value)
sortedpValues <- sort(pValues, decreasing = FALSE)
sortedpValues <- as.matrix(sortedpValues)
VorinostatwithpValues <- cbind(VorinostatTotal, pValues)
VorinostatwithpValues <-  as.data.frame(VorinostatwithpValues)
Biomarkermatrix2sidedtest <- VorinostatwithpValues[VorinostatwithpValues$pValues
<=  sortedpValues[100,],]
Biomarker2sidedtestsorted <- Biomarkermatrix2sidedtest[order
(Biomarkermatrix2sidedtest$pValues),]
FC <- TreatedVorinostat - UntreatedVorinostat
FCVorinostatabs= abs(FC)
FCVorinostatmean <- apply(FCVorinostatabs, 1, mean)
#sort the values to get the 100 largest values:
sortedgeneralbiomarker <- sort(FCVorinostatmean, decreasing = TRUE)
sortedgeneralbiomarker <- as.matrix(sortedgeneralbiomarker)
#select the top 100 general biomarkers:
top100generalbiomarkers = sortedgeneralbiomarker[1:100,]
top100generalbiomarkers <- as.matrix(top100generalbiomarkers)
head(top100generalbiomarkers)
generalbiomarkergenes = row.names(top100generalbiomarkers)
FC_meanrow= rowMeans(FC)
# look at the absolute values:
FC_meanrow = abs(FC_meanrow)
# sort the FC
sortedFC <- sort(FC_meanrow, decreasing = TRUE)
sortedFC <- as.matrix(sortedFC)
# take the first 100 values for comparison
FC100<- sortedFC[1:100,]
FC100 <- as.matrix(FC100)
# create a vector with genenames
biomarkergenes_noabs = row.names(FC100)
# check if it has the correct length
length(biomarkergenes_noabs)
setequal(biomarkergenes_noabs,generalbiomarkergenes)
# biomarkers in biomarkergenes_noabs but not in generalbiomarkergenes
diff1= setdiff(biomarkergenes_noabs,generalbiomarkergenes)
length(diff1)
diff1
# biomarkers in generalbiomarkergenes but not in biomarkergenes_noabs
diff2= setdiff(generalbiomarkergenes,biomarkergenes_noabs)
length(diff2)
diff2
FCVorinostatmean_noabs= rowMeans(FC)
#Matrix with information about general up- or downregulation:
FCVorinostatmean_noabs_matrix <- as.matrix(FCVorinostatmean_noabs)
#loop, which adds those biomarkergenes to a vector, which are mostly upregulated:
i=1
Upregulated <- c()
while(i<=100) {
if(FCVorinostatmean_noabs_matrix[generalbiomarkergenes[i],1] >0) {
Upregulated <- union(Upregulated, generalbiomarkergenes[i])
}
i=i+1}
#Create a vector that includes for each gene sequentially if it is up- or downregulated:
i=1
Generalchange <- c()
while(i<=100) {
if(FCVorinostatmean_noabs_matrix[generalbiomarkergenes[i],1] >0) {
Generalchange <- append(Generalchange, "Up")
} else {
Generalchange <- append(Generalchange, "Down")
}
i=i+1}
top100generalbiomarkers_withUporDown <- cbind(top100generalbiomarkers, Generalchange)
# rename
colnames(top100generalbiomarkers_withUporDown)[1] <- "FCmean"
head(top100generalbiomarkers_withUporDown)
setequal(generalbiomarkergenes,biomarkers.genes)
# biomarkers in biomarkergenes_noabs but not in generalbiomarkergenes
diff1= setdiff(biomarkergenes_noabs,generalbiomarkergenes)
length(diff1)
diff1
# biomarkers in generalbiomarkergenes but not in biomarkergenes_noabs
diff2= setdiff(generalbiomarkergenes,biomarkergenes_noabs)
length(diff2)
diff2
setequal(generalbiomarkergenes,biomarkers.genes)
biomarkers <- sortedpValues[1:100,]
biomarkers <- as.matrix(biomarkers)
biomarkers.genes = row.names(biomarkers)
setequal(generalbiomarkergenes,biomarkers.genes)
diff= setdiff(generalbiomarkergenes,biomarkers.genes)
length(diff)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
head(pV_FC)
library(knitr)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
knitr::kable(head(pV_FC), caption = "10 highest FC values")
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
pV_FC2=pV_FC[generalbiomarkergenes,]
knitr::kable(head(pV_FC), caption = "comparison FC and P.Value")
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
pV_FC2=pV_FC[generalbiomarkergenes,]
knitr::kable(head(pV_FC2), caption = "comparison FC and P.Value")
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
pV_FC=as.data.frame()
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
knitr::kable(head(pV_FC2), caption = "comparison FC and P.Value")
View(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
head(pV_FC2)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
head(pV_FC2)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_a=abs(FC)
FC_a=as.data.frame(FC_m)
sort(rownames(FC_a), decreasing = F)
pV_FC= cbind(FC_a,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
head(pV_FC2)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_a=abs(FC)
FC_a=as.data.frame(FC_m)
sort(rownames(FC_a), decreasing = F)
pV_FC= cbind(FC_a,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
head(pV_FC2)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
head(pV_FC2)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_a=abs(FC)
FC_a=as.data.frame(FC_m)
sort(rownames(FC_a), decreasing = F)
pV_FC= cbind(FC_a,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
head(pV_FC2)
# Franzi
#wd = ("C:/Users/franz/Documents/GitHub/project-02-group-05/Broad Analysis")
# Laura
wd = ("/Users/laura.plutowski/Desktop/Uni/4.Semester/projekt/project-02-group-05")
library(readr)
Untreated = readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated = readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
Metadata = read_tsv(paste0(wd,"/data/NCI_TPW_metadata.tsv"))
Drug_annotation = read.table(paste0(wd,"/data/drug_annotation.tsv"),
header = TRUE, sep ="\t", stringsAsFactors = TRUE)
UntreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Untreated))
TreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Treated))
UntreatedVorinostat <- Untreated[,UntreatedVorinostatcolumns]
TreatedVorinostat <- Treated[,TreatedVorinostatcolumns]
# normalize the data
UntreatedVorinostat <- apply(UntreatedVorinostat, 2, function(x){
(x - mean(x)) / sd(x)
})
TreatedVorinostat <- apply(TreatedVorinostat, 2, function(x){
(x - mean(x)) / sd(x)
})
FC <- TreatedVorinostat  - UntreatedVorinostat
identical(rownames(UntreatedVorinostat), rownames(TreatedVorinostat))
identical(colnames(UntreatedVorinostat), colnames(TreatedVorinostat))
Untreatedcolnames <- sub(pattern = "_0nM_24h", "", colnames(UntreatedVorinostat))
Treatedcolnames <- sub(pattern = "_5000nM_24h", "", colnames(TreatedVorinostat))
identical(Untreatedcolnames, Treatedcolnames)
VorinostatTotal <- cbind(UntreatedVorinostat, TreatedVorinostat)
col_untreated = grep ('_0nM',colnames(VorinostatTotal))
col_treated = grep ('_5000nM',colnames(VorinostatTotal))
t.test.Vorinostat = apply(VorinostatTotal, 1, function(x) t.test(x[col_untreated],
x[col_treated],
paired = TRUE,
alternative = "two.sided"))
pValues <- apply(VorinostatTotal, 1, function(x) t.test(x[col_untreated],
x[col_treated],
paired = TRUE,
alternative = "two.sided")$p.value)
sortedpValues <- sort(pValues, decreasing = FALSE)
sortedpValues <- as.matrix(sortedpValues)
VorinostatwithpValues <- cbind(VorinostatTotal, pValues)
VorinostatwithpValues <-  as.data.frame(VorinostatwithpValues)
Biomarkermatrix2sidedtest <- VorinostatwithpValues[VorinostatwithpValues$pValues
<=  sortedpValues[100,],]
Biomarker2sidedtestsorted <- Biomarkermatrix2sidedtest[order
(Biomarkermatrix2sidedtest$pValues),]
biomarkers <- sortedpValues[1:100,]
biomarkers <- as.matrix(biomarkers)
biomarkers.genes = row.names(biomarkers)
FC <- TreatedVorinostat - UntreatedVorinostat
FCVorinostatabs= abs(FC)
FCVorinostatmean <- apply(FCVorinostatabs, 1, mean)
#sort the values to get the 100 largest values:
sortedgeneralbiomarker <- sort(FCVorinostatmean, decreasing = TRUE)
sortedgeneralbiomarker <- as.matrix(sortedgeneralbiomarker)
#select the top 100 general biomarkers:
top100generalbiomarkers = sortedgeneralbiomarker[1:100,]
top100generalbiomarkers <- as.matrix(top100generalbiomarkers)
head(top100generalbiomarkers)
generalbiomarkergenes = row.names(top100generalbiomarkers)
FC_meanrow= rowMeans(FC)
# look at the absolute values:
FC_meanrow = abs(FC_meanrow)
# sort the FC
sortedFC <- sort(FC_meanrow, decreasing = TRUE)
sortedFC <- as.matrix(sortedFC)
# take the first 100 values for comparison
FC100<- sortedFC[1:100,]
FC100 <- as.matrix(FC100)
# create a vector with genenames
biomarkergenes_noabs = row.names(FC100)
# check if it has the correct length
length(biomarkergenes_noabs)
# biomarkers in biomarkergenes_noabs but not in generalbiomarkergenes
diff1= setdiff(biomarkergenes_noabs,generalbiomarkergenes)
length(diff1)
diff1
# biomarkers in generalbiomarkergenes but not in biomarkergenes_noabs
diff2= setdiff(generalbiomarkergenes,biomarkergenes_noabs)
length(diff2)
diff2
generalbiomarkergenes = row.names(top100generalbiomarkers)
FC_meanrow= rowMeans(FC)
# look at the absolute values:
FC_meanrow = abs(FC_meanrow)
# sort the FC
sortedFC <- sort(FC_meanrow, decreasing = TRUE)
sortedFC <- as.matrix(sortedFC)
# take the first 100 values for comparison
FC100<- sortedFC[1:100,]
FC100 <- as.matrix(FC100)
# create a vector with genenames
biomarkergenes_noabs = row.names(FC100)
# check if it has the correct length
length(biomarkergenes_noabs)
setequal(biomarkergenes_noabs,generalbiomarkergenes)
# biomarkers in biomarkergenes_noabs but not in generalbiomarkergenes
diff1= setdiff(biomarkergenes_noabs,generalbiomarkergenes)
length(diff1)
diff1
# biomarkers in generalbiomarkergenes but not in biomarkergenes_noabs
diff2= setdiff(generalbiomarkergenes,biomarkergenes_noabs)
length(diff2)
diff2
FCVorinostatmean_noabs= rowMeans(FC)
#Matrix with information about general up- or downregulation:
FCVorinostatmean_noabs_matrix <- as.matrix(FCVorinostatmean_noabs)
#loop, which adds those biomarkergenes to a vector, which are mostly upregulated:
i=1
Upregulated <- c()
while(i<=100) {
if(FCVorinostatmean_noabs_matrix[generalbiomarkergenes[i],1] >0) {
Upregulated <- union(Upregulated, generalbiomarkergenes[i])
}
i=i+1}
#Create a vector that includes for each gene sequentially if it is up- or downregulated:
i=1
Generalchange <- c()
while(i<=100) {
if(FCVorinostatmean_noabs_matrix[generalbiomarkergenes[i],1] >0) {
Generalchange <- append(Generalchange, "Up")
} else {
Generalchange <- append(Generalchange, "Down")
}
i=i+1}
top100generalbiomarkers_withUporDown <- cbind(top100generalbiomarkers, Generalchange)
# rename
colnames(top100generalbiomarkers_withUporDown)[1] <- "FCmean"
head(top100generalbiomarkers_withUporDown)
setequal(generalbiomarkergenes,biomarkers.genes)
diff= setdiff(generalbiomarkergenes,biomarkers.genes)
length(diff)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
head(pV_FC2)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
FC <- TreatedVorinostat - UntreatedVorinostat
FCVorinostatabs= abs(FC)
FCVorinostatmean <- apply(FCVorinostatabs, 1, mean)
pV_FC= cbind(FC_m,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
head(pV_FC2)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=Treated-Untreated
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
FC <- TreatedVorinostat - UntreatedVorinostat
FCVorinostatabs= abs(FC)
FCVorinostatmean <- apply(FCVorinostatabs, 1, mean)
pV_FC= cbind(FCVorinostatmean,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
head(pV_FC2)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=TreatedVorinostat-UntreatedVorinostat
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FCVorinostatmean,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
head(pV_FC2)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=TreatedVorinostat-UntreatedVorinostat
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FCVorinostatmean,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
a=head(pV_FC2)
knitr::kable(a, caption = "1s")
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=TreatedVorinostat-UntreatedVorinostat
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
a=head(pV_FC2)
knitr::kable(a, caption = "1s")
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=TreatedVorinostat-UntreatedVorinostat
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC2=pV_FC[generalbiomarkergenes,]
a=as.data.frame(head(pV_FC2))
knitr::kable(a, caption = "1s")
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=TreatedVorinostat-UntreatedVorinostat
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC=pV_FC[generalbiomarkergenes,]
head(pV_FC2)
pValues=as.data.frame(pValues)
sort(rownames(pValues), decreasing = F)
FC=TreatedVorinostat-UntreatedVorinostat
FC_m=rowMeans(FC)
FC_m=as.data.frame(FC_m)
sort(rownames(FC_m), decreasing = F)
pV_FC= cbind(FC_m,pValues)
pV_FC=as.data.frame(pV_FC)
pV_FC=pV_FC[generalbiomarkergenes,]
head(pV_FC)
View(FC_m)
